{"version":3,"file":"static/js/739.55e7ded7.chunk.js","mappings":"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","sources":["components/Title/Title.styled.js","components/Title/Title.jsx","hooks/AuthHook.js","components/DayProducts/DayProducts.styled.js","redux/diary/diarySelectors.js","components/DayProducts/DayProductItem.jsx","components/DayProducts/DayProducts.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercises/DayExerciseItem.jsx","components/DayExercises/DayExercises.jsx","components/DashboardElement/DashboardElement.styled.js","components/DashboardElement/DashboardElement.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/Diary/Diary.styled.js","components/DaySwitch/DaySwitch.styled.js","components/DaySwitch/DaySwichIcons.jsx","components/DaySwitch/DaySwitch.jsx","components/Diary/Diary.jsx","pages/DiaryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitleText = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n  font-size: 24px;\n  line-height: 28px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 44px;\n  }\n`;\n","import React from 'react';\nimport { TitleText } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return <TitleText>{title}</TitleText>;\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n  selectIsLoading,\n  selectBMR,\n  selectDailyRateSports,\n} from '../redux/user/userSelectors';\n\nexport const useAuth = () => {\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const isLoading = useSelector(selectIsLoading);\n  const bmr = useSelector(selectBMR);\n  const dailyRateSports = useSelector(selectDailyRateSports);\n\n  return {\n    user,\n    isLoggedIn,\n    isRefreshing,\n    isLoading,\n    bmr,\n    dailyRateSports,\n  };\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst getRecomended = props => (props.$isRecomended ? '#E9101D' : '#419B09');\n\nexport const ProductsContainer = styled.div`\n  position: relative;\n  min-height: 335px;\n  max-height: 824px;\n  padding: 16px 12px 16px 16px;\n  border: 1px solid var(--border-static-color);\n  border-radius: 12px;\n\n  @media screen and (max-width: 767px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    min-height: 234px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    min-height: 234px;\n    padding: 19px 32px 16px 32px;\n  }\n`;\n\nexport const ProductHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  margin-right: 4px;\n`;\n\nexport const DayProductTitle = styled.p`\n  font-size: 14px;\n  line-height: 18px;\n  color: var(--text-categories-color);\n`;\n\nexport const ProductsLink = styled(Link)`\n  text-decoration: none;\n  color: var(--orange-color);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  transition: color var(--transition-dur-and-func);\n  &:hover,\n  &:focus {\n    color: var(--orange_1-color);\n  }\n`;\n\nexport const TitlesContainer = styled.div`\n  display: flex;\n`;\n\n//* Mobile *//\nexport const DayProductsMobileList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-direction: column;\n  gap: 40px;\n\n  height: 752px;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar-thumb {\n    background-color: red;\n    border-radius: 6px;\n  }\n`;\n\nexport const DayProductsMobileElement = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 12px;\n`;\n\nexport const MobileItemContainer = styled.div``;\n\nexport const MobileTitle = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  margin-bottom: 8px;\n  color: var(--orange_1-color);\n`;\n\nexport const MobileValueContainer = styled.div`\n  display: block;\n  height: 38px;\n  padding: 10px 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n\n  &.big {\n    width: 295px;\n    color: red;\n  }\n\n  &.medium {\n    width: 295px;\n    color: aquamarine;\n  }\n\n  &.small {\n    width: 81px;\n    color: blue;\n  }\n`;\n\nexport const MobileValue = styled.p`\n  font-size: 14px;\n  line-height: 18px;\n  text-transform: capitalize;\n`;\n\nexport const DeleteProductBtn = styled.button`\n  width: 20px;\n  height: 20px;\n  margin-top: 34px;\n  padding: 0px;\n\n  background-color: transparent;\n  border: none;\n`;\n\nexport const RecomendedProduct = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  font-size: 14px;\n  line-height: 18px;\n  &::before {\n    content: '';\n    display: block;\n    width: 14px;\n    height: 14px;\n    border-radius: 10px;\n    background-color: ${getRecomended};\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: start;\n  }\n`;\n\n//* Desctop *//\n\nexport const DayProductsContainer = styled.div`\n  height: 172px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n\nexport const Table = styled.table`\n  width: 672px;\n  border-spacing: 8px;\n  border-collapse: separate;\n\n  @media screen and (min-width: 1440px) {\n    width: 762px;\n  }\n`;\n\nexport const TableTitle = styled.th`\n  text-align: left;\n  font-size: 12px;\n  line-height: 18px;\n\n  color: var(--orange_1-color);\n`;\n\nexport const TR = styled.tr``;\n\nexport const TableValueContainer = styled.td`\n  width: 90px;\n  height: 40px;\n  padding: 8px 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  overflow: hidden;\n\n  &.big {\n    width: 204px;\n  }\n\n  &.medium {\n    width: 128px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 105px;\n\n    &.big {\n      width: 212px;\n    }\n\n    &.medium {\n      width: 166px;\n    }\n\n    &.recomended {\n      width: 110px;\n    }\n  }\n`;\n\nexport const ValueContainer = styled.div`\n  width: 176px;\n\n  overflow: hidden;\n`;\n\nexport const TableValue = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n//* Not Found *//\n\nexport const NotFoundProducts = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  color: var(--text-info-color);\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectBMR, selectDailyRateSports } from '../user/userSelectors';\n\nexport const selectDate = state => state.diary.date;\n\nexport const selectDiaryProducts = state => state.diary.products;\n\nexport const selectDiaryExercises = state => state.diary.exercises;\n\nexport const selectCaloriesConsumed = createSelector(\n  [selectDiaryProducts],\n  products => {\n    let calories = 0;\n    products.map(el => {\n      return (calories += el.calories);\n    });\n\n    return Math.floor(calories);\n  }\n);\n\nexport const selectCaloriesBurned = createSelector(\n  [selectDiaryExercises],\n  exercises => {\n    let calories = 0;\n    exercises.map(el => {\n      return (calories += el.calories);\n    });\n\n    return Math.floor(calories);\n  }\n);\n\nexport const selectCaloriesRemaining = createSelector(\n  [selectCaloriesConsumed, selectBMR, selectCaloriesBurned],\n  (consumed, bmr, burned) => {\n    return bmr + burned - consumed;\n  }\n);\n\nexport const selectSportRemaining = createSelector(\n  [selectDiaryExercises, selectDailyRateSports],\n  (exercises, rate) => {\n    let seconds = 0;\n    exercises.map(el => {\n      return (seconds += el.time);\n    });\n    const trainingTimeInMinutes = seconds / 60;\n    const isExceeded = Math.floor(rate - trainingTimeInMinutes);\n    if (isExceeded < 0) {\n      return `+${isExceeded.toString().split('-')[1]}`;\n    }\n    return isExceeded.toString();\n  }\n);\n","import React from 'react';\nimport {\n  MobileItemContainer,\n  MobileTitle,\n  MobileValue,\n  MobileValueContainer,\n} from './DayProducts.styled';\n\nexport const DayProductItem = ({ title, value }) => {\n  const defineClassName = title => {\n    const size =\n      title === 'Title' ? 'big' : title === 'Category' ? 'medium' : 'small';\n    return `${size}`;\n  };\n\n  return (\n    <MobileItemContainer>\n      <MobileTitle>{title}</MobileTitle>\n      <MobileValueContainer className={defineClassName(title)}>\n        <MobileValue>{value}</MobileValue>\n      </MobileValueContainer>\n    </MobileItemContainer>\n  );\n};\n","import {\n  ProductsContainer,\n  NotFoundProducts,\n  ProductsLink,\n  ProductHeader,\n  DayProductTitle,\n  DayProductsContainer,\n  RecomendedProduct,\n  DayProductsMobileList,\n  DayProductsMobileElement,\n  MobileTitle,\n  MobileValueContainer,\n  MobileItemContainer,\n  DeleteProductBtn,\n  Table,\n  TableTitle,\n  TableValue,\n  TableValueContainer,\n  ValueContainer,\n} from './DayProducts.styled';\nimport { Icon } from 'components/Icon/Icon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchDeleteProduct } from '../../redux/diary/operations';\nimport { selectDiaryProducts } from '../../redux/diary/diarySelectors';\n\nimport { selectUser } from '../../redux/user/userSelectors';\nimport { DayProductItem } from './DayProductItem';\n\n// const products = [];\n\nexport const DayProducts = ({ media }) => {\n  const dispatch = useDispatch();\n\n  const products = useSelector(selectDiaryProducts);\n  const { blood } = useSelector(selectUser);\n\n  const deleteProduct = id => {\n    dispatch(fetchDeleteProduct(id));\n  };\n\n  return (\n    <ProductsContainer>\n      <ProductHeader>\n        <DayProductTitle>Products</DayProductTitle>\n\n        <ProductsLink to=\"/products\">\n          Add Product <Icon height={15} width={15} iconid={'arrow'} />\n        </ProductsLink>\n      </ProductHeader>\n      {products.length ? (\n        <>\n          {media ? (\n            <DayProductsContainer>\n              <Table id=\"products\">\n                <thead>\n                  <tr>\n                    <TableTitle>Title</TableTitle>\n                    <TableTitle>Category</TableTitle>\n                    <TableTitle>Calories</TableTitle>\n                    <TableTitle>Weight</TableTitle>\n                    <TableTitle>Recommend</TableTitle>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {products.map((el, i) => {\n                    return (\n                      <tr key={el._id}>\n                        <TableValueContainer className=\"big\">\n                          <ValueContainer>\n                            <TableValue>{el.productId.title}</TableValue>\n                          </ValueContainer>\n                        </TableValueContainer>\n                        <TableValueContainer className=\"medium\">\n                          <TableValue>{el.productId.category}</TableValue>\n                        </TableValueContainer>\n                        <TableValueContainer>\n                          <TableValue>{Math.floor(el.calories)}</TableValue>\n                        </TableValueContainer>\n                        <TableValueContainer>\n                          <TableValue>{el.amount}</TableValue>\n                        </TableValueContainer>\n                        <TableValueContainer className=\"recomended\">\n                          <RecomendedProduct\n                            $isRecomended={\n                              el.productId.groupBloodNotAllowed[blood]\n                            }\n                          >\n                            {el.productId.groupBloodNotAllowed[blood]\n                              ? 'No'\n                              : 'Yes'}\n                          </RecomendedProduct>\n                        </TableValueContainer>\n                        <td>\n                          <DeleteProductBtn\n                            style={{ marginTop: '0px' }}\n                            onClick={() => deleteProduct(el._id)}\n                          >\n                            <Icon\n                              width={20}\n                              height={20}\n                              iconid={'trash-icon'}\n                            />\n                          </DeleteProductBtn>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </DayProductsContainer>\n          ) : (\n            <>\n              <DayProductsMobileList>\n                {products.map((el, i) => {\n                  return (\n                    <DayProductsMobileElement key={el._id}>\n                      <DayProductItem\n                        title={'Title'}\n                        value={el.productId.title}\n                      />\n                      <DayProductItem\n                        title={'Category'}\n                        value={el.productId.category}\n                      />\n                      <DayProductItem title={'Calories'} value={el.calories} />\n                      <DayProductItem title={'Weight'} value={el.amount} />\n                      <MobileItemContainer>\n                        <MobileTitle>Recommend</MobileTitle>\n                        <MobileValueContainer>\n                          <RecomendedProduct\n                            $isRecomended={\n                              el.productId.groupBloodNotAllowed[blood]\n                            }\n                          >\n                            {el.productId.groupBloodNotAllowed[blood]\n                              ? 'No'\n                              : 'Yes'}\n                          </RecomendedProduct>\n                        </MobileValueContainer>\n                      </MobileItemContainer>\n                      <DeleteProductBtn onClick={() => deleteProduct(el._id)}>\n                        <Icon width={20} height={20} iconid={'trash-icon'} />\n                      </DeleteProductBtn>\n                    </DayProductsMobileElement>\n                  );\n                })}\n              </DayProductsMobileList>\n            </>\n          )}\n        </>\n      ) : (\n        <NotFoundProducts>Not found products</NotFoundProducts>\n      )}\n    </ProductsContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'components/Icon/Icon';\n\nexport const ExercisesContainer = styled.div`\n  position: relative;\n  min-height: 335px;\n  max-height: 824px;\n  padding: 16px 12px 16px 16px;\n  border: 1px solid var(--border-static-color);\n  border-radius: 12px;\n\n  @media screen and (max-width: 767px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    min-height: 234px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    min-height: 234px;\n    padding: 19px 32px 16px 32px;\n  }\n`;\n\nexport const ExercisesHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n`;\n\nexport const DayExercisesTitle = styled.p`\n  font-size: 14px;\n  line-height: 18px;\n  margin-left: 8px;\n  color: var(--text-categories-color);\n`;\n\nexport const DayExercisesIcon = styled(Icon)`\n  margin-bottom: -5px;\n`;\n\nexport const ExercisesLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  color: var(--orange-color);\n  transition: color var(--transition-dur-and-func);\n  &:hover,\n  &:focus {\n    color: var(--orange_1-color);\n  }\n`;\n\nexport const Exerciseslist = styled.div`\n  display: block;\n`;\n\n//* Mobile //\n\nexport const DayExercisesMobileList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-direction: column;\n  gap: 40px;\n\n  height: 752px;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar-thumb {\n    background-color: red;\n    border-radius: 6px;\n  }\n`;\n\nexport const DayExercisesMobileElement = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 12px;\n`;\n\nexport const MobileItemContainer = styled.div``;\n\nexport const MobileExercisesTitle = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  margin-bottom: 8px;\n  color: var(--orange_1-color);\n`;\n\nexport const MobileExercisesValueContainer = styled.div`\n  display: block;\n  height: 38px;\n  padding: 10px 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  overflow: hidden;\n  &.big {\n    width: 295px;\n  }\n\n  &.small {\n    width: 76px;\n  }\n`;\n\nexport const MobileExercisesValue = styled.p`\n  font-size: 14px;\n  line-height: 18px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\n//* Desctop //\n\nexport const DayExercisesContainer = styled.div`\n  height: 172px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n\nexport const ExercisesTable = styled.table`\n  width: 672px;\n  border-spacing: 8px;\n  border-collapse: separate;\n\n  @media screen and (min-width: 1440px) {\n    width: 762px;\n  }\n`;\n\nexport const ExercisesCaloriesWrapper = styled.div`\n  width: 78px;\n  overflow: hidden;\n`;\n\nexport const ExercisesCaloriesTitle = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  color: var(--orange_1-color);\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ExercisesTableTitle = styled.th`\n  text-align: left;\n  font-size: 12px;\n  line-height: 18px;\n\n  color: var(--orange_1-color);\n`;\n\nexport const TR = styled.tr``;\n\nexport const ExercisesTableValueContainer = styled.td`\n  width: 72px;\n  height: 40px;\n  padding: 8px 14px;\n  border: 1px solid var(--text-info-color);\n  border-radius: 12px;\n  overflow: hidden;\n`;\n\nexport const ValueContainer = styled.div`\n  width: 62px;\n  overflow: hidden;\n\n  &.equipment {\n    width: 104px;\n  }\n\n  &.name {\n    width: 100px;\n  }\n\n  &.target {\n    width: 50px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 87px;\n    &.equipment {\n      width: 129px;\n    }\n\n    &.name {\n      width: 103px;\n    }\n\n    &.target {\n      width: 78px;\n    }\n\n    &.calories {\n      width: 63px;\n    }\n  }\n`;\n\nexport const ExercisesTableValue = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  text-align: left;\n  text-transform: capitalize;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n//* Btn //\nexport const DeleteExerciseBtn = styled.button`\n  width: 20px;\n  height: 20px;\n  margin-top: 34px;\n  padding: 0px;\n\n  background-color: transparent;\n  border: none;\n`;\n\n//* Not Found *//\n\nexport const NotFoundExercises = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  color: var(--text-info-color);\n`;\n","import React from 'react';\nimport {\n  MobileExercisesTitle,\n  MobileExercisesValue,\n  MobileExercisesValueContainer,\n} from './DayExercises.styled';\n\nexport const DayExerciseItem = ({ title, value }) => {\n  const defineSize = title => {\n    return title === 'Body Part' || title === 'Equipment' || title === 'Name'\n      ? 'big'\n      : 'small ';\n  };\n\n  return (\n    <div>\n      <MobileExercisesTitle> {title}</MobileExercisesTitle>\n      <MobileExercisesValueContainer className={defineSize(title)}>\n        <MobileExercisesValue>{value}</MobileExercisesValue>\n      </MobileExercisesValueContainer>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  DayExercisesContainer,\n  DayExercisesIcon,\n  DayExercisesMobileElement,\n  DayExercisesMobileList,\n  DayExercisesTitle,\n  DeleteExerciseBtn,\n  ExercisesCaloriesTitle,\n  ExercisesCaloriesWrapper,\n  ExercisesContainer,\n  ExercisesHeader,\n  ExercisesLink,\n  ExercisesTable,\n  ExercisesTableTitle,\n  ExercisesTableValue,\n  ExercisesTableValueContainer,\n  Exerciseslist,\n  NotFoundExercises,\n  ValueContainer,\n} from './DayExercises.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDiaryExercises } from '../../redux/diary/diarySelectors';\nimport { Icon } from 'components/Icon/Icon';\nimport { DayExerciseItem } from './DayExerciseItem';\nimport { fetchDeleteExercise } from '../../redux/diary/operations';\n\nexport const DayExercises = ({ media }) => {\n  const exercises = useSelector(selectDiaryExercises);\n  const dispatch = useDispatch();\n\n  const deleteExercise = id => {\n    dispatch(fetchDeleteExercise(id));\n  };\n\n  return (\n    <ExercisesContainer>\n      <ExercisesHeader>\n        <DayExercisesTitle>Exercises</DayExercisesTitle>\n        <ExercisesLink to=\"/exercises\">\n          Add Exercise{' '}\n          <DayExercisesIcon height={15} width={15} iconid={'arrow'} />\n        </ExercisesLink>\n      </ExercisesHeader>\n      <Exerciseslist>\n        {exercises.length ? (\n          <>\n            {media ? (\n              <DayExercisesContainer>\n                <ExercisesTable id=\"exercises\">\n                  <thead>\n                    <tr>\n                      <ExercisesTableTitle>Body Part</ExercisesTableTitle>\n                      <ExercisesTableTitle>Equipment</ExercisesTableTitle>\n                      <ExercisesTableTitle>Name</ExercisesTableTitle>\n                      <ExercisesTableTitle>Target</ExercisesTableTitle>\n                      <ExercisesTableTitle>\n                        <ExercisesCaloriesWrapper>\n                          <ExercisesCaloriesTitle>\n                            Burned Calories\n                          </ExercisesCaloriesTitle>\n                        </ExercisesCaloriesWrapper>\n                      </ExercisesTableTitle>\n                      <ExercisesTableTitle>Time</ExercisesTableTitle>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {exercises.map((el, i) => {\n                      return (\n                        <tr key={el._id}>\n                          <ExercisesTableValueContainer>\n                            <ValueContainer>\n                              <ExercisesTableValue>\n                                {el.exerciseId.bodyPart}\n                              </ExercisesTableValue>\n                            </ValueContainer>\n                          </ExercisesTableValueContainer>\n                          <ExercisesTableValueContainer>\n                            <ValueContainer className=\"equipment\">\n                              <ExercisesTableValue>\n                                {el.exerciseId.equipment}\n                              </ExercisesTableValue>\n                            </ValueContainer>\n                          </ExercisesTableValueContainer>\n                          <ExercisesTableValueContainer>\n                            <ValueContainer className=\"name\">\n                              <ExercisesTableValue>\n                                {el.exerciseId.name}\n                              </ExercisesTableValue>\n                            </ValueContainer>\n                          </ExercisesTableValueContainer>\n                          <ExercisesTableValueContainer>\n                            <ValueContainer className=\"target\">\n                              <ExercisesTableValue>\n                                {el.exerciseId.target}\n                              </ExercisesTableValue>\n                            </ValueContainer>\n                          </ExercisesTableValueContainer>\n                          <ExercisesTableValueContainer>\n                            <ValueContainer className=\"calories\">\n                              <ExercisesTableValue>\n                                {el.calories}\n                              </ExercisesTableValue>\n                            </ValueContainer>\n                          </ExercisesTableValueContainer>\n                          <ExercisesTableValueContainer>\n                            {el.time}\n                          </ExercisesTableValueContainer>\n                          <td>\n                            <DeleteExerciseBtn\n                              style={{ marginTop: '0px' }}\n                              onClick={() => deleteExercise(el._id)}\n                            >\n                              <Icon\n                                width={20}\n                                height={20}\n                                iconid={'trash-icon'}\n                              />\n                            </DeleteExerciseBtn>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </ExercisesTable>\n              </DayExercisesContainer>\n            ) : (\n              <>\n                <DayExercisesMobileList>\n                  {exercises.map((el, i) => {\n                    return (\n                      <DayExercisesMobileElement key={el._id}>\n                        <DayExerciseItem\n                          title={'Body Part'}\n                          value={el.exerciseId.bodyPart}\n                        />\n                        <DayExerciseItem\n                          title={'Equipment'}\n                          value={el.exerciseId.equipment}\n                        />\n                        <DayExerciseItem\n                          title={'Name'}\n                          value={el.exerciseId.name}\n                        />\n                        <DayExerciseItem\n                          title={'Target'}\n                          value={el.exerciseId.target}\n                        />\n                        <DayExerciseItem\n                          title={'Burned Calories'}\n                          value={el.calories}\n                        />\n                        <DayExerciseItem title={'Time'} value={el.time} />\n                        <DeleteExerciseBtn\n                          onClick={() => deleteExercise(el._id)}\n                        >\n                          <Icon width={20} height={20} iconid={'trash-icon'} />\n                        </DeleteExerciseBtn>\n                      </DayExercisesMobileElement>\n                    );\n                  })}\n                </DayExercisesMobileList>\n              </>\n            )}\n          </>\n        ) : (\n          <NotFoundExercises>Not found exercises</NotFoundExercises>\n        )}\n      </Exerciseslist>\n    </ExercisesContainer>\n  );\n};\n","import styled from 'styled-components';\n\nconst getColor = props =>\n  props.$isOrange ? '--orange-color' : '--primary-black-color';\n\nconst getTextColor = props =>\n  props.$isOrange ? '--diary-active-color' : '--text-categories-color';\n\nexport const Dashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 157px;\n  height: 96px;\n  padding: 14px;\n  background-color: var(${getColor});\n  border: 1px solid var(--border-static-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 116px;\n  }\n\n  &.too-much-calories {\n    border: 1px solid #e9101d;\n  }\n\n  &.good-training {\n    border: 1px solid #3cbf61;\n  }\n`;\n\nexport const IconAndTitleContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const DashboardTitle = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  color: var(${getTextColor});\n`;\n\nexport const Indicator = styled.p`\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 20px;\n`;\n","import React from 'react';\nimport {\n  Dashboard,\n  DashboardTitle,\n  IconAndTitleContainer,\n  Indicator,\n} from './DashboardElement.styled';\nimport { Icon } from 'components/Icon/Icon';\n\nexport const DashboardElement = ({ name, icon, text, isOrange, exceeded }) => {\n  const exceededParams = exceeded => {\n    if (exceeded === undefined) {\n      return;\n    } else if (exceeded[0] === 'calories' && exceeded[1] < 0) {\n      return 'too-much-calories';\n    } else if (exceeded[0] === 'sports' && exceeded[1].includes('+')) {\n      return 'good-training';\n    }\n  };\n\n  return (\n    <Dashboard $isOrange={isOrange} className={exceededParams(exceeded)}>\n      <IconAndTitleContainer>\n        <Icon height={20} width={20} iconid={icon} />\n\n        <DashboardTitle $isOrange={isOrange}>{name}</DashboardTitle>\n      </IconAndTitleContainer>\n      <Indicator>{text}</Indicator>\n    </Dashboard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DayDashboardContainer = styled.div``;\n\nexport const DashboardList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px 13px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    max-height: 248px;\n    max-width: 593px;\n    gap: 16px;\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    max-height: 593px;\n    gap: 16px;\n    margin-bottom: 48px;\n  }\n`;\n\nexport const NotificationContainer = styled.div`\n  width: 335px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: nowrap;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const Notification = styled.p`\n  max-width: 303px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  color: var(--text-info-color);\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    max-width: 561px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 358px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import { DashboardElement } from 'components/DashboardElement/DashboardElement';\nimport React from 'react';\nimport {\n  DashboardList,\n  DayDashboardContainer,\n  Notification,\n  NotificationContainer,\n} from './DayDashboard.styled';\nimport { Icon } from 'components/Icon/Icon';\nimport { useSelector } from 'react-redux';\nimport {\n  selectBMR,\n  selectDailyRateSports,\n} from '../../redux/user/userSelectors';\nimport {\n  selectCaloriesBurned,\n  selectCaloriesConsumed,\n  selectCaloriesRemaining,\n  selectSportRemaining,\n} from '../../redux/diary/diarySelectors';\n\nexport const DayDashboard = () => {\n  const dailyRateSports = useSelector(selectDailyRateSports);\n  const bmr = useSelector(selectBMR);\n  const caloriesConsumed = useSelector(selectCaloriesConsumed);\n  const caloriesBurned = useSelector(selectCaloriesBurned);\n  const caloriesRemaining = useSelector(selectCaloriesRemaining);\n  const sportRemaining = useSelector(selectSportRemaining);\n\n  return (\n    <DayDashboardContainer>\n      <DashboardList>\n        <DashboardElement\n          isOrange={true}\n          name={'Daily calorie intake'}\n          text={bmr || 2200}\n          icon={'food'}\n        />\n\n        <DashboardElement\n          isOrange={true}\n          name={'Daily physical activity'}\n          text={`${dailyRateSports || 110} min`}\n          icon={'dumbbell'}\n        />\n        <DashboardElement\n          name={'Calories consumed'}\n          text={caloriesConsumed}\n          icon={'apple'}\n        />\n\n        <DashboardElement\n          name={'Calories burned'}\n          text={caloriesBurned}\n          icon={'fire'}\n        />\n        <DashboardElement\n          name={'Calories remaining'}\n          text={caloriesRemaining}\n          icon={'bubble'}\n          exceeded={['calories', caloriesRemaining]}\n        />\n        <DashboardElement\n          name={'Sports remaining'}\n          text={`${sportRemaining} min`}\n          icon={'running-man'}\n          exceeded={['sports', sportRemaining]}\n        />\n      </DashboardList>\n      <NotificationContainer>\n        <Icon width={24} height={24} iconid={'warning'} />\n        <Notification>\n          Record all your meals in the calorie diary every day. This will help\n          you be aware of your nutrition and make informed choices\n        </Notification>\n      </NotificationContainer>\n    </DayDashboardContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DiaryContainer = styled.div``;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const ProductAndExercises = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  @media screen and (min-width: 1440px) {\n    gap: 32px;\n  }\n`;\n\nexport const DashboardContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 40px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n","import { createGlobalStyle, styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n\n  @media screen and (max-width: 767px) {\n    gap: 20px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  align-items: center;\n  gap: 11px;\n\n  @media screen and (max-width: 767px) {\n    gap: 0px;\n  }\n`;\n\nexport const Wrap = styled.div``;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border-color: transparent;\n  width: 24px;\n  height: 24px;\n`;\n\nexport const TitleWrapper = styled.button`\n  width: 129px;\n  padding: 0;\n  color: #efede8;\n  background: transparent;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 133%;\n  text-align: center;\n  text-transform: uppercase;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n  border: none;\n\n  @media screen and (max-width: 767px) {\n    font-size: 18px;\n    line-height: 20px;\n  }\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n  .react-datepicker__wrapper {\n    position: relative;\n\n  }\n  .react-datepicker {\n    position: absolute !important;\n    right: 50%;\n    top: 50%;\n    transform: translate(50px, 0%);\n    display: flex !important;\n    flex-direction: column;\n    align-items: center;\n    width: 215px;\n    height: auto;\n    padding: 14px;\n    background-color: #ef8964 !important;\n    font-family: inherit !important;\n    border: none !important;\n    border-radius: 8px !important;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964 !important;\n  }\n  .react-datepicker__day-names {\n    width: 100%;\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-evenly;\n    align-items: center;\n    margin-bottom: 0px !important;\n    \n    padding-top: 14px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n\n  }\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n    outline: none;\n    border: none;\n}\n  .react-datepicker__current-month {\n    margin: 0 0 14px 0  !important;\n    font-family: inherit;\n    font-size: 16px !important;\n    font-style: normal;\n    font-weight: 500 !important;\n    letter-spacing: -0.02em;\n    text-align: center;\n    color: #efede8  !important;\n  }\n  .react-datepicker__day-name {\n    align-self: start;\n    width: 0 !important;\n    margin: 0 1rem 0 0 !important;\n    padding: 0;\n    font-family: inherit;\n    font-size: 14px !important;\n    font-style: normal;\n    font-weight: 500 !important;\n    text-align: center;\n    line-height: normal !important;\n    letter-spacing: -0.02em !important;\n    color: rgba(239,237,232,0.5) !important;\n  }\n  .react-datepicker__navigation {\n    margin-top: 16px;\n    color: white;\n    align-items: center;\n    background: none;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    cursor: pointer;\n    position: absolute;\n    top: 2px;\n    padding: 0;\n    border: none;\n    z-index: 1;\n    height: 32px;\n    width: 32px;\n    text-indent: -999em;\n    overflow: hidden;\n  }\n\n  .react-datepicker__navigation-icon {\n    position: relative;\n    top: -1px !important;\n    font-size: 20px !important;\n    width: 0 !important;\n  }\n\n  .react-datepicker__aria-live {\n    display: none;\n  }\n\n  .react-datepicker__navigation-icon:before { \n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 6px !important;\n    width: 6px !important;\n    height: 6px !important;\n    border-color: #efede8  !important;\n    border-style: solid;\n    border-width: 1px 1px 0 0 !important;\n    transform: rotate(225deg);\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px !important;\n    width: 18px !important;\n    height: 18px !important;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px !important;\n    width: 18px !important;\n    height: 18px !important;\n  }\n\n   .react-datepicker__navigation-icon--next:before {\n    left: -7px !important;\n    transform: rotate(45deg);\n  }\n\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: rgba(239, 237, 232, 0.5);\n    opacity: 50%;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: #efede8  !important; \n  }\n  .react-datepicker__day {\n    display: flex !important;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0 0.35rem 0 0.35rem !important;\n    width: 16px !important;\n    height: 18px !important;\n    border-radius: 50%;\n    color: #efede8  !important;\n    font-family: inherit;\n    font-size: 14px !important;;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 129% !important;\n    letter-spacing: -0.02em;\n    text-align: center;\n    \n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 7px;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-top: 11px;\n    margin: 0 !important;\n  }\n  .react-datepicker__day--selected {\n    width: 24px !important;\n    height: 24px !important;\n    border-radius: 50% !important;\n    background-color: #040404  !important;\n    color: #efede8  !important;\n  }\n  .react-datepicker__day--selected:hover {\n    width: 24px !important;\n    height: 24px !important; \n    border-radius: 50% !important;\n  }\n  .react-datepicker__day:hover {\n    width: 24px !important;\n    height: 24px !important;\n    border-radius: 50% !important;\n    background-color: #040404  !important;\n    color: #efede8  !important;\n  }\n  .react-datepicker__day--keyboard-selected {\n    width: 24px !important;\n    height: 24px !important;\n    border-radius: 50% !important;\n    background-color: #040404  !important;\n    color: #efede8  !important;\n    \n  }\n  .react-datepicker__day--weekend {\n    opacity: 50%;\n  }\n.react-datepicker__day--outside-month {\n    background-color: transparent;\n    pointer-events: none;\n    opacity: 0;\n  }\n  .react-datepicker__view-calendar-icon input {\n    padding: 6px 10px 5px 13px;\n  }\n  .react-datepicker__triangle {\n    visibility: hidden;\n  }\n\n\n\n  .react-datepicker__day--disabled{\n    color: rgba(239, 237, 232, 0.2) !important;\n\n  }\n\n  .react-datepicker__day--disabled:hover {\n    color: rgba(239, 237, 232, 0.2) !important;\n    background-color: transparent !important;\n  }\n  \n`;\n","import styled from 'styled-components';\nimport sprite from '../../img/pulse-icons.svg';\n\nconst StyledIcon = styled.svg`\n  &.disabled {\n    fill: rgba(239, 237, 232, 0.2);\n  }\n\n  &.active {\n    fill: #efede8;\n  }\n`;\n\nexport const DaySwichIcons = ({ turn, disabled }) => {\n  return (\n    <StyledIcon\n      className={disabled ? 'disabled' : 'active'}\n      width={16}\n      height={16}\n    >\n      <use\n        href={`${sprite}#${turn === 'next' ? 'diary-back' : 'diary-next'}`}\n      ></use>\n    </StyledIcon>\n  );\n};\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { addDays, format, isAfter, isBefore } from 'date-fns';\n\n//------------------------------------------\nimport {\n  Container,\n  Wrapper,\n  Wrap,\n  Button,\n  CalendarGlobalStyles,\n  TitleWrapper,\n} from './DaySwitch.styled';\nimport { Icon } from 'components/Icon/Icon';\n\n//------------------------------------------\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from 'hooks/AuthHook';\nimport { clearData, setDate } from '../../redux/diary/diarySlice';\nimport { DaySwichIcons } from './DaySwichIcons';\n\nexport const DaySwitch = ({ media }) => {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const calRef = useRef();\n  const [startDate, setCurrentDate] = useState(new Date());\n  const today = new Date();\n  const [disabledPrev, setDisabledPrev] = useState(false);\n  const [disabledNext, setDisabledNext] = useState(true);\n\n  const formatDate = notFormatedDate => {\n    return notFormatedDate\n      .toISOString()\n      .split('T', 1)[0]\n      .split('-')\n      .reverse()\n      .join('-');\n  };\n\n  useEffect(() => {\n    if (user.createdAt) {\n      if (formatDate(new Date(user.createdAt)) === formatDate(new Date())) {\n        setDisabledPrev(true);\n      }\n    }\n  }, [user.createdAt, startDate]);\n\n  const clearStore = () => dispatch(clearData());\n\n  const goPrevDate = () => {\n    const day = new Date(startDate);\n    const prevDay = new Date(day.setDate(day.getDate() - 1));\n    const prevRegistrationDate = new Date(\n      new Date(user.createdAt).setDate(new Date(user.createdAt).getDate() - 1)\n    );\n\n    if (formatDate(new Date(user.createdAt)) === formatDate(prevDay)) {\n      setDisabledPrev(true);\n    }\n\n    if (isBefore(prevRegistrationDate, prevDay)) {\n      clearStore();\n      setCurrentDate(prevDay);\n      dispatch(setDate(formatDate(prevDay)));\n      setDisabledNext(false);\n    }\n  };\n\n  const goNextDate = () => {\n    const day = new Date(startDate);\n    const nextDay = new Date(day.setDate(day.getDate() + 1));\n\n    if (formatDate(today) === formatDate(nextDay)) {\n      setDisabledNext(true);\n    }\n    if (isAfter(today, nextDay)) {\n      clearStore();\n      setCurrentDate(nextDay);\n      dispatch(setDate(formatDate(nextDay)));\n      setDisabledPrev(false);\n    }\n  };\n\n  const selectPickerDate = date => {\n    clearStore();\n    setCurrentDate(date);\n    dispatch(setDate(formatDate(date)));\n  };\n\n  const CustomInput = forwardRef(({ value, onClick }, ref) => {\n    return (\n      <Wrapper>\n        <TitleWrapper onClick={onClick} ref={ref}>\n          {format(startDate, 'dd/MM/yyyy')}\n        </TitleWrapper>\n        <Icon\n          iconid=\"calendar\"\n          width={media ? 24 : 20}\n          height={media ? 24 : 20}\n        />\n      </Wrapper>\n    );\n  });\n\n  return (\n    <Container>\n      <DatePicker\n        ref={calRef}\n        dateFormat={'dd MM yyyy'}\n        showIcon={false}\n        selected={startDate}\n        shouldCloseOnSelect={true}\n        minDate={new Date(user.createdAt)}\n        maxDate={addDays(new Date(), 0)}\n        onChange={date => selectPickerDate(date)}\n        customInput={<CustomInput />}\n      />\n      <Wrap>\n        <Button disabled={disabledPrev} onClick={() => goPrevDate()}>\n          <DaySwichIcons turn={'next'} disabled={disabledPrev} />\n        </Button>\n        <Button disabled={disabledNext} onClick={() => goNextDate()}>\n          <DaySwichIcons turn={'back'} disabled={disabledNext} />\n        </Button>\n      </Wrap>\n      <CalendarGlobalStyles />\n    </Container>\n  );\n};\n","import { Title } from 'components/Title/Title';\nimport React, { useEffect } from 'react';\nimport { DayProducts } from 'components/DayProducts/DayProducts';\nimport { DayExercises } from 'components/DayExercises/DayExercises';\nimport { DayDashboard } from 'components/DayDashboard/DayDashboard';\nimport {\n  ProductAndExercises,\n  DiaryContainer,\n  TitleContainer,\n  DashboardContainer,\n} from './Diary.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDate } from '../../redux/diary/diarySelectors';\nimport { fetchDiary } from '../../redux/diary/operations';\nimport { useMedia } from 'use-media';\nimport { DaySwitch } from 'components/DaySwitch/DaySwitch';\n\nexport const Diary = () => {\n  const dispatch = useDispatch();\n  const date = useSelector(selectDate);\n  const isWide = useMedia({ minWidth: '767px' });\n\n  useEffect(() => {\n    dispatch(fetchDiary(date));\n  }, [dispatch, date]);\n\n  return (\n    <DiaryContainer className=\"container\">\n      <TitleContainer>\n        <Title title={'Diary'} />\n        <DaySwitch media={isWide} />\n      </TitleContainer>\n      <DashboardContainer>\n        <ProductAndExercises>\n          <DayProducts media={isWide} />\n          <DayExercises media={isWide} />\n        </ProductAndExercises>\n        <DayDashboard />\n      </DashboardContainer>\n    </DiaryContainer>\n  );\n};\n","import { Diary } from 'components/Diary/Diary';\nimport React from 'react';\n\nfunction DiaryPage() {\n  return (\n    <>\n      <Diary />\n    </>\n  );\n}\n\nexport default DiaryPage;\n"],"names":["TitleText","styled","_templateObject","_taggedTemplateLiteral","Title","_ref","title","_jsx","children","useAuth","user","useSelector","selectUser","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","isLoading","selectIsLoading","bmr","selectBMR","dailyRateSports","selectDailyRateSports","ProductsContainer","ProductHeader","_templateObject2","DayProductTitle","_templateObject3","ProductsLink","Link","_templateObject4","DayProductsMobileList","_templateObject5","_templateObject6","DayProductsMobileElement","_templateObject7","MobileItemContainer","_templateObject8","MobileTitle","_templateObject9","MobileValueContainer","_templateObject10","MobileValue","_templateObject11","DeleteProductBtn","_templateObject12","RecomendedProduct","_templateObject13","props","$isRecomended","DayProductsContainer","_templateObject14","Table","_templateObject15","TableTitle","_templateObject16","TableValueContainer","_templateObject17","_templateObject18","ValueContainer","_templateObject19","TableValue","_templateObject20","NotFoundProducts","_templateObject21","selectDate","state","diary","date","selectDiaryProducts","products","selectDiaryExercises","exercises","selectCaloriesConsumed","createSelector","calories","map","el","Math","floor","selectCaloriesBurned","selectCaloriesRemaining","consumed","burned","selectSportRemaining","rate","seconds","time","trainingTimeInMinutes","isExceeded","concat","toString","split","DayProductItem","value","_jsxs","className","defineClassName","DayProducts","media","dispatch","useDispatch","blood","deleteProduct","id","fetchDeleteProduct","to","Icon","height","width","iconid","length","_Fragment","i","productId","category","amount","groupBloodNotAllowed","style","marginTop","onClick","_id","ExercisesContainer","ExercisesHeader","DayExercisesTitle","DayExercisesIcon","ExercisesLink","Exerciseslist","DayExercisesMobileList","DayExercisesMobileElement","MobileExercisesTitle","MobileExercisesValueContainer","MobileExercisesValue","DayExercisesContainer","ExercisesTable","ExercisesCaloriesWrapper","ExercisesCaloriesTitle","ExercisesTableTitle","ExercisesTableValueContainer","ExercisesTableValue","DeleteExerciseBtn","_templateObject22","NotFoundExercises","_templateObject23","DayExerciseItem","defineSize","DayExercises","deleteExercise","fetchDeleteExercise","exerciseId","bodyPart","equipment","name","target","Dashboard","$isOrange","IconAndTitleContainer","DashboardTitle","Indicator","DashboardElement","icon","text","isOrange","exceeded","undefined","includes","exceededParams","DayDashboardContainer","DashboardList","NotificationContainer","Notification","DayDashboard","caloriesConsumed","caloriesBurned","caloriesRemaining","sportRemaining","DiaryContainer","TitleContainer","ProductAndExercises","DashboardContainer","Container","Wrapper","Wrap","Button","TitleWrapper","CalendarGlobalStyles","createGlobalStyle","StyledIcon","DaySwichIcons","turn","disabled","href","sprite","DaySwitch","calRef","useRef","_useState","useState","Date","_useState2","_slicedToArray","startDate","setCurrentDate","today","_useState3","_useState4","disabledPrev","setDisabledPrev","_useState5","_useState6","disabledNext","setDisabledNext","formatDate","notFormatedDate","toISOString","reverse","join","useEffect","createdAt","clearStore","clearData","CustomInput","forwardRef","_ref2","ref","format","DatePicker","dateFormat","showIcon","selected","shouldCloseOnSelect","minDate","maxDate","addDays","onChange","setDate","selectPickerDate","customInput","day","prevDay","getDate","prevRegistrationDate","isBefore","goPrevDate","nextDay","isAfter","goNextDate","Diary","isWide","useMedia","minWidth","fetchDiary"],"sourceRoot":""}